Revision history for Perl extension RPC::XML.

0.25	Tue Jun 12 22:35:09 PDT 2001

	This is the initial release.

0.26	Mon Jun 25 22:30:18 PDT 2001

	Fixed some doc errors in RPC::XML::Server. Mainly things I had
	simplified, but not updated the docs to reflect.

	Added a fair amount to the docs in Apache::RPC::Server. In particular,
	a new section was added that illustrates using <Perl> configuration
	sections to create the server objects in the master Apache process,
	so that they are automatically inherited by children.

0.27	Sun Jul  8 16:25:51 PDT 2001

	Removed a -w warning from RPC/XML.pm. Fixed some cases in the new()
	method of RPC::XML::boolean that would have permitted invalid data.
	Added two convenience methods to RPC::XML::fault, called code() and
	string(), that fetch the faultCode and faultString member values as
	native Perl values. The RPC::XML::base64 class was using the wrong
	container tags in the as_string method.

	Clarified and expanded some of the documentation in RPC/XML/Server.pm.

	Adjusted the PREREQ_PM hash in Makefile.PL so that it correctly looks
	for LWP, and also looks for File::Spec 0.8 or newer (needed to ensure
	that the splitpath() method is available).

	Cleaned up the load-tests (t/00_load.t) to use the Test harnessing
	package. Added test suites for the RPC::XML data classes (t/10_data.t,
	96 tests) and the RPC::XML::Parser container-class (t/20_parser.t,
	7 tests).

0.28	Sun Oct  7 21:27:39 PDT 2001

	Found a subtle-but-nasty bug in the handling of RPC::XML::string
	objects. Thanks to Dominic Mitchell <dom@semantico.com> for pointing
	me in the right direction.

	Started down the path of making the suite as a whole geared more
	towards real use than illustrative example. The XML data-classes now
	no longer use indention (or any superfluous whitespace) in their
	stringification. This shortened the code quite a bit, and will also
	mean shorter messages. This could not have been done cleanly without
	the tests in t/10_data.t.

	Extracted the method-manipulation code into a new class, called
	RPC::XML::Method. This should make method-sharing easier, and pull
	a lot of method-specific code out of RPC::XML::Server and
	Apache::RPC::Server.

	Clarified some issues in the new() constructor of the
	Apache::RPC::Server class, and also changed the calling convention.
	It no longer treats the first few arguments in any special way at all.
	The arguments are all consistently taken as option/value pairs, just
	as with RPC::XML::Server. The documentation relflects this. This may
	break things built on the old style, but in the long run it should
	prove much better.
