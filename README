RPC::XML - An implementation of XML-RPC

Version: 0.61

WHAT IS IT

The RPC::XML package is an implementation of XML-RPC. The module provides
classes for sample client and server implementations, a server designed as an
Apache location-handler, and a suite of data-manipulation classes that are
used by them.


USING RPC::XML

There are not any pre-packaged executables in this distribution (except for a
utility tool). Client usage will usually be along the lines of:

    use RPC::XML::Client;
    ...
    my $client = new RPC::XML::Client
        'http://www.oreillynet.com/meerkat/xml-rpc/server.php';
    my $req = RPC::XML::request->new('meerkat.getChannelsBySubstring', 'perl');
    my $res = $client->send_request($req);
    # This returns an object of the RPC::XML::response class. This double-call
    # of value() first gets a RPC::XML::* data object from the response, then
    # the actual data from it:
    my $value = $res->value->value;

Running a simple server is not much more involved:

    use RPC::XML::Server;
    ...
    my $srv = new RPC::XML::Server (host => 'localhost',
                                    port => 9000);
    # You would then use $srv->add_method to add some remotely-callable code
    ...
    $srv->accept_loop; # Stays in an accept/connect loop


BUILDING/INSTALLING

This package is set up to configure and build like a typical Perl extension.
To build:

        perl Makefile.PL
        make && make test

If RPC::XML passes all tests, then:

        make install

You may need super-user access to install.


PROBLEMS/BUG REPORTS

Please send any reports of problems or bugs to rjray@blackperl.com


SEE ALSO

XML-RPC:          http://www.xmlrpc.com/spec
The Artistic 2.0: http://www.opensource.org/licenses/artistic-license-2.0.php
The LGPL 2.1:     http://www.opensource.org/licenses/lgpl-2.1.php


CHANGES

t/00_load.t:
Converted to Test::More due to some cpan-testers reports that showed
test 2 failing. Hoping this might provide better feedback if it
continues to fail.

t/40_server.t:
Changed a test for "localhost:$port" in the server URL method to
optionally allow localhost.localdomain, for those systems whose
/etc/hosts cause the former to convert to the latter. Was causing
false failures.

t/40_server.t:
t/50_client.t:
t/60_net_server.t:
Test suites armored against server processes that die as a result of
croak() or other calls within 3rd-party modules. The client and
net_server suites were also converted to Test::More at this time.

t/40_server.t:
Fix for RT ticket #36078, fix the URL testing on the server object to
be less strict. Instead of only allowing "localhost", now also allows
"localhost.localdomain" and does a look-up of "localhost" for the 127.*
IP address and permits that as well. In essence, this extends and
supercedes the second change listed above after more invariant cases
were discovered.

lib/RPC/XML.pm:
t/10_data.t:
Per RT ticket #30354 and specific request from a large agency using
this package, implemented an "i8" type as an extension to the official
XML-RPC specification. Documentation and tests included. THIS SHOULD BE
CONSIDERED EXPERIMENTAL.

t/40_server.t:
t/60_net_server.t:
Some of the work in armoring the test suites against server-death changed
the counts on tests and on call-counts in the system.status method. Some
explicit re-starts didn't help.
